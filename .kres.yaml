# Configuration file for Kres
#
# Kres configuration is a multi-document YAML file, each document has same structure:
#
#   ---
#   kind: <package>.<Type>
#   name: <nodeName>  # (optional)
#   spec:  # configuration for specific project node
#      field: value
#      ...
#
#
# Any node in the tree might have its configuration overridden via the config.
---
kind: common.Image
name: image-kres
spec:
  extraEnvironment:
    PLATFORM: linux/amd64,linux/arm64
  entrypointArgs: ['gen']
---
kind: common.Release
spec:
  generateSignatures: true
---
kind: golang.Build
spec:
  outputs:
    linux-amd64:
      GOOS: linux
      GOARCH: amd64
    linux-arm64:
      GOOS: linux
      GOARCH: arm64
    darwin-amd64:
      GOOS: darwin
      GOARCH: amd64
    darwin-arm64:
      GOOS: darwin
      GOARCH: arm64
---
kind: service.CodeCov
spec:
  targetThreshold: 8
---
kind: common.Build
spec:
  ignoredPaths:
    - "_out/example/"
---
kind: golang.Generate
spec:
  versionPackagePath: internal/version
---
kind: golang.GolangciLint
spec:
  depguardExtraRules:
    test_kres_depguard_extra_rule_1:
      list-mode: lax
      files:
        - test_1.go
      deny:
        - pkg: io/ioutil
          desc: Test rule 1
    test_kres_depguard_extra_rule_2:
      list-mode: lax
      files:
        - test_2.go
      deny:
        - pkg: io/ioutil
          desc: Test rule 2
---
kind: common.Renovate
spec:
  customManagers:
    - customType: regex
      managerFilePatterns:
        - internal/config/constants.go
      matchStrings:
        - '\/\/\s+renovate: datasource=(?<datasource>.*?)(?:\s+extractVersion=(?<extractVersion>.+?))?(?:\s+versioning=(?<versioning>.+?))?\s+depName=(?<depName>.+?)?\s.*Version\s+=\s+\"(?<currentValue>.+?)\"'
      versioningTemplate: "{{#if versioning}}{{versioning}}{{else}}semver{{/if}}"
  packageRules:
    - matchPackageNames:
        - golang/go
      versioning: 'regex:^(?<major>\d+)\.(?<minor>\d+)\.?(?<patch>\d+)?$'
    - matchPackageNames:
        - actions/checkout
        - docker/login-action
        - softprops/action-gh-release
        - docker/setup-buildx-action
        - slackapi/slack-github-action
      versioning: 'regex:^v(?<major>\d+)'
    - matchPackageNames:
        - potiuk/get-workflow-origin
      versioning: 'regex:^v(?<major>\d+)_(?<minor>\d+)_?(?<patch>\d+)?$'
    - enabled: false
      matchFileNames:
        - internal/output/dockerfile/dockerfile_test.go
    - matchPackageNames:
        - node
      matchDatasources:
        - docker
      allowedVersions: /^24\.\d+\.\d+-alpine$/
